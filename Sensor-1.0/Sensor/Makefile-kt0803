#############################################################################
# Makefile for building: MCU firmware
# Generated by Marusenkov S.A. on: Mon Sep 23 09:14:00 2019
# Project:  KT0803.pro, only KT0803 FM transmitter
# Template: firmware
# Command: none
#############################################################################

####### Target MCU series (MCU), model (MCUM)
MCU=1986BE9x
MCUM=1986BE91T

# MCU=1901BC1x
# MCUM=1901BC1T

# MCU=1986BE1x
# MCUM=1986BE1T

####### Target LCD and LCD interface
# LCD=pcWWHH:      8-bit interface [DB7..DB0,RS,RW,E]
# LCD=pcWWHH-4bit: 4-bit interface [DB7..DB4,RS,RW,E]
# LCD=pcWWHH-i2c:  I2C interface, PCF8574x I2C<->8bit converter

# PC1602x: 16 chars x 2 lines
# LCD=pc1602
# LCD=pc1602-4bit
# LCD=pc1602-i2c

# PC2004x: 20 chars x 4 lines
# LCD=pc2004
# LCD=pc2004-4bit
# LCD=pc2004-i2c

# MT-12864: 128x64 pixels, only parallel interface
LCD=mt12864

###### CPU versions (-mcpu key values)
MCPUS[1986BE1x]=cortex-m1
MCPUS[1986BE9x]=cortex-m3
MCPUS[1901BC1x]=cortex-m3
#MCPUS[<mcu model>]=<core version>

####### Compiler, tools and options
CC       = arm-none-eabi-gcc
CCASM    = arm-none-eabi-gcc
LINK     = arm-none-eabi-gcc
OBJCOPY  = arm-none-eabi-objcopy
OBJDUMP  = arm-none-eabi-objdump
FMPROG   = /usr/bin/mcufmloader
SRCDIR   = ../lib
INCPATH  = -Isrc \
	-Itarget \
	-Itarget/$(MCUM)-$(LCD) \
	-I$(SRCDIR) \
	-I$(SRCDIR)/mc/inc \
	-I$(SRCDIR)/hw/inc \
	-I$(SRCDIR)/std/inc \
	-I$(SRCDIR)/sys/inc
# 4KB stack recommended
STACK_SIZE = 4096
OPTIMIZE   = -O1
DEFINES  = -D__NO_SYSTEM_INIT -D__STARTUP_CLEAR_BSS \
        -D__STACK_SIZE=$(STACK_SIZE) -D__START=main -DI2C_TRAN_TIMEOUT=800
CFLAGS   = -mcpu=${MCPUS[$(MCU)]} -mthumb $(OPTIMIZE) \
        -ffunction-sections -fdata-sections \
	-Wall -Wextra -Wshadow -Wredundant-decls -Wno-unused-parameter \
	-Wmissing-field-initializers -Wno-main \
	-pipe $(DEFINES)
LFLAGS   = -T $(SRCDIR)/mc/src/$(MCU)/$(MCU).ld \
        --specs=nosys.specs \
	-Wl,--gc-sections -ffreestanding -nostartfiles \
        -Wl,-Map=$(TARGETMAP)
DEL_FILE = rm -f
MOVE     = mv -f
MKDIR    = mkdir -p

####### Output directory
OUTDIR   = output
BINDIR   = $(OUTDIR)/bin
LSTDIR   = $(OUTDIR)/lst
OBJDIR   = $(OUTDIR)/obj

####### Files
SOURCESASM = $(SRCDIR)/mc/src/$(MCU)/startup_$(MCU).S
SOURCES    = src/kt0803-main.c \
	src/rtrm-kt0803x.c \
	src/adc-pcf8591.c \
	src/sensor-bh1750x.c \
	src/sensor-bmp280.c \
	src/sensor-dht12.c \
	src/sensor-ds18b20.c \
	src/sensor-hmc5883.c \
	src/sensor-ina219.c \
	src/sensor-lm75a.c \
	src/sensor-mpu6000.c \
	src/sensor-poll.c \
	src/kalmanf.c \
	$(SRCDIR)/mc/src/CPU.c \
	$(SRCDIR)/mc/src/Timer.c \
	$(SRCDIR)/mc/src/SysTimer.c \
	$(SRCDIR)/mc/src/I2C.c \
	$(SRCDIR)/mc/src/IWire.c \
	$(SRCDIR)/mc/src/UART.c \
	$(SRCDIR)/std/src/common/stdcf.c \
	$(SRCDIR)/std/src/common/DateTime.c \
	$(SRCDIR)/std/src/hash/CRC.c
OBJECTSASM = $(SOURCESASM:.S=.o)
OBJECTS    = $(SOURCES:.c=.o)
LISTINGS   = $(OBJECTS:.o=.lst)

TARGET     = KT0803-$(MCU)-$(LCD)-gcc
TARGETELF  = $(BINDIR)/$(TARGET).elf
TARGETHEX  = $(BINDIR)/$(TARGET).hex
TARGETBIN  = $(BINDIR)/$(TARGET).bin
TARGETMAP  = $(BINDIR)/$(TARGET).map
TARGETLST  = $(LSTDIR)/$(TARGET).lst

TMPFILE = $(OBJDIR)/objfiles.tmp
OBJFILE  = $(OBJDIR)/`basename $@`
OBJFILES = `cat $(TMPFILE)`

first: all

####### Implicit rules
.SUFFIXES: .c .S .o .lst

.c.o:
	$(CC) $(CFLAGS) $(INCPATH) -c $< -o $(OBJFILE)
	echo -n "$(OBJFILE) " >> $(TMPFILE)

.S.o:
	$(CCASM) $(CFLAGS) $(INCPATH) -c $< -o $(OBJFILE)
	echo -n "$(OBJFILE) " >> $(TMPFILE)

.o.lst:
	$(OBJDUMP) -D $(OBJDIR)/`basename $<` > $(LSTDIR)/`basename $@`

####### Build rules
all: prep $(SOURCESASM) $(SOURCES) $(TARGETELF)

prep:
	$(DEL_FILE) $(TMPFILE)

####### NOTE! Use "-lm" (link libm.a, math library) parameter after "-o $@" 
####### otherwise link error occured. Don't use "-L" parameter (path to lib directory)
$(TARGETELF): $(OBJECTSASM) $(OBJECTS) $(LISTINGS)
	$(LINK) $(CFLAGS) $(LFLAGS) $(OBJFILES) -o $@ -lm
	$(OBJCOPY) $(TARGETELF) $(TARGETBIN) -O binary
	$(OBJCOPY) $(TARGETELF) $(TARGETHEX) -O ihex
	$(OBJDUMP) -D $(TARGETELF) > $(TARGETLST)
	$(DEL_FILE) $(TMPFILE)

dist: clean
	tar -cz ../test > ../test-`date +%Y-%m-%d_%k-%M-%S`.tar.gz
	tar -czh ../lib > ../lib-`date +%Y-%m-%d_%k-%M-%S`.tar.gz

check: first

####### Compile

####### Clean
clean:
	$(DEL_FILE) $(OBJDIR)/*.o $(LSTDIR)/*.lst $(TMPFILE)

distclean: clean
	$(DEL_FILE) $(BINDIR)/$(TARGET)*

####### Install
program:
	$(FMPROG) -mcu $(MCU) -fmt binary -file $(TARGETBIN) -write

start:
	$(FMPROG) -mcu $(MCU) -start

erase:
	$(FMPROG) -mcu $(MCU) -erase

rdata:
	$(FMPROG) -port 0 -iospeed 115200 --rdata

install: program

uninstall: erase

FORCE:
